{"version":3,"sources":["boot/Boot.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["bootMessages","Boot","useState","displayMessages","setDisplayMessages","cnt","setCnt","useEffect","id","setInterval","length","clearInterval","c","dm","className","map","msg","i","toString","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAKMA,EAAe,CACnB,+BACA,MACA,aACA,MACA,MACA,qBACA,2BACA,0BACA,MACA,MACA,MACA,6BAkCaC,EA/BQ,WAAO,IAAD,EACmBC,mBAAmB,IADtC,mBACpBC,EADoB,KACHC,EADG,OAELF,mBAAS,GAFJ,mBAEpBG,EAFoB,KAEfC,EAFe,KAoB3B,OAhBAC,qBAAU,WACR,IAAMC,EAAKC,aAAY,WAChBT,EAAaU,SAAWL,GAC3BM,cAAcH,GAEZR,EAAaU,SAAWL,IAC1BC,GAAO,SAAAM,GAAC,OAAIA,EAAI,KAChBR,GAAmB,SAAAS,GACjB,MAAM,GAAN,mBAAWA,GAAX,CAAeb,EAAaK,WAG/B,KACH,OAAO,kBAAMM,cAAcH,MAC1B,CAACH,IAIF,qBAAKS,UAAU,OAAf,SAEIX,EAAgBY,KAAI,SAACC,EAAKC,GAAN,OAClB,8BAAyBD,GAAfC,EAAEC,kBCjCPC,EARO,WACpB,OACE,qBAAKL,UAAU,OAAf,SACE,cAAC,EAAD,OCQSM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aed6b893.chunk.js","sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport {useState} from 'react';\nimport './Boot.css';\n\nconst bootMessages = [\n  'Welcome to heyyou Portfolio!',\n  '...',\n  'Start Boot',\n  '...',\n  '...',\n  'Set heyyou Profile',\n  'Set GitHub User  heyyou3',\n  'Set Qiita User hey1you1',\n  '...',\n  '...',\n  '...',\n  'Running heyyou Portfolio!',\n];\n\nconst Boot: React.FC = () => {\n  const [displayMessages, setDisplayMessages] = useState<String[]>([]);\n  const [cnt, setCnt] = useState(0);\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      if  (bootMessages.length === cnt) {\n        clearInterval(id);\n      }\n      if (bootMessages.length !== cnt)  {\n        setCnt(c => c + 1);\n        setDisplayMessages(dm => {\n          return [...dm, bootMessages[cnt]];\n        });\n      }\n    }, 300);\n    return () => clearInterval(id);\n  }, [cnt]);\n\n\n  return (\n    <div className=\"boot\">\n      {\n        displayMessages.map((msg, i) => (\n          <div key={i.toString()}>{msg}</div>\n        ))\n      }\n    </div>\n  );\n};\n\nexport default Boot;","import './App.css';\nimport Boot from '../boot/Boot';\n\nconst App: React.FC = () => {\n  return (\n    <div className='main'>\n      <Boot></Boot>\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./app/App\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}